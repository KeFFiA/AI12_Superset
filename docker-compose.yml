services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_DB: superset
    networks:
      - superset_net
    volumes:
      - ./volumes/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superset"]
      interval: 5s
      retries: 5

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - superset_net
    volumes:
      - ./volumes/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  superset:
    container_name: superset
    build: .
    image: ai12_superset:latest
    restart: unless-stopped
    networks:
      - superset_net
    network_mode: "host"
    environment:
      # Mapbox
      - MAPBOX_API_KEY=pk.eyJ1IjoiYWdyaW5pbiIsImEiOiJjbWZreHlhcnIwMjFnMm1zNnBpaW91M2pvIn0.56vxzoKVrYvnZtM_j3DNog
      # Redis (cache + results backend)
      - REDIS_URL=redis://redis:6379/0
      # Optional
      - GUEST_TOKEN_JWT_EXP_SECONDS=600
      - SUPERSET_HOME=/app/superset_home
      - SUPERSET_CONFIG_PATH=/app/superset_config.py
      - SECRET_KEY=KF9MCWa6sg3AYeCZ8KkIXKrNK4f1yBk30mwvJhaKidvL2HkJ+vIJfJJo
    volumes:
      - ./volumes/superset_home:/app/superset_home
    ports:
      - "8088:8088"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy


networks:
  superset_net:
    driver: bridge