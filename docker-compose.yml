services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_DB: superset
    volumes:
      - ./volumes/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superset"]
      interval: 5s
      retries: 5

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./volumes/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  superset:
    container_name: superset
    build: .
    image: custom-superset:latest
    restart: unless-stopped
    environment:
      # Metadata DB (Postgres)
      - SUPERSET_DATABASE_URI=postgresql+psycopg2://superset:superset@db:5432/superset
      # Mapbox
      - MAPBOX_API_KEY=pk.eyJ1IjoiYWdyaW5pbiIsImEiOiJjbWZreHlhcnIwMjFnMm1zNnBpaW91M2pvIn0.56vxzoKVrYvnZtM_j3DNog
      # Redis (cache + results backend)
      - REDIS_URL=redis://redis:6379/0
      # Optional
      - GUEST_TOKEN_JWT_EXP_SECONDS=600
      - SUPERSET_HOME=/app/superset_home
    volumes:
      - ./superset_config.py:/app/pythonpath/superset_config.py:ro
      - ./volumes/superset_home:/app/superset_home
    ports:
      - "8088:8088"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Admin --lastname Admin --email admin@admin.com --password admin &&
        superset init &&
        /usr/bin/run-server.sh
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -sS http://localhost:8088/health | grep UP || exit 1"]
      interval: 10s
      retries: 5
